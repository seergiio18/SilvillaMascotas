security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        # Use native password hasher, which auto-selects and migrates the best
        # possible hashing algorithm (which currently is "bcrypt")
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User: 
            algorithm: auto
            # You may adjust the cost according to your needs
            # cost: 13

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        main:
            provider: app_user_provider
            form_login:
                login_path: login
                check_path: login

            logout:
                path: app_logout
                target: registro
                invalidate_session: true
                
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
        password_hashers:
            #By default, password hashers are resource intensive and take time.
            #This is important to generate secure password hashes.
            #In test however, secure hashes are not important, waste resources and increase test times.
            #The following reduces the work factoe to the lowest possible value.
            Symfony\Component\Security\Core\User\PasswordAunthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10

